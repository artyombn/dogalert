"""Add timezone to datetime fields in User model

Revision ID: 27148388ab47
Revises: 7e865148d30e
Create Date: 2025-04-18 15:49:46.985968

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '27148388ab47'
down_revision: Union[str, None] = '7e865148d30e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "UPDATE users SET created_at = created_at AT TIME ZONE 'UTC', updated_at = updated_at AT TIME ZONE 'UTC'")
    op.alter_column('users', 'created_at',
                   existing_type=postgresql.TIMESTAMP(),
                   type_=sa.DateTime(timezone=True),
                   existing_nullable=False,
                   existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
                   existing_type=postgresql.TIMESTAMP(),
                   type_=sa.DateTime(timezone=True),
                   existing_nullable=False,
                   existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updated_at',
                   existing_type=sa.DateTime(timezone=True),
                   type_=postgresql.TIMESTAMP(),
                   existing_nullable=False,
                   existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
                   existing_type=sa.DateTime(timezone=True),
                   type_=postgresql.TIMESTAMP(),
                   existing_nullable=False,
                   existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
