"""Add timezone to datetime fields in Pet model

Revision ID: 7e865148d30e
Revises: 4c196dfcf07e
Create Date: 2025-04-18 15:17:37.392003

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7e865148d30e'
down_revision: Union[str, None] = '4c196dfcf07e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
            UPDATE pets SET 
                created_at = created_at AT TIME ZONE 'UTC',
                updated_at = updated_at AT TIME ZONE 'UTC',
                last_vaccination = last_vaccination AT TIME ZONE 'UTC',
                next_vaccination = next_vaccination AT TIME ZONE 'UTC',
                last_parasite_treatment = last_parasite_treatment AT TIME ZONE 'UTC',
                next_parasite_treatment = next_parasite_treatment AT TIME ZONE 'UTC',
                last_fleas_ticks_treatment = last_fleas_ticks_treatment AT TIME ZONE 'UTC',
                next_fleas_ticks_treatment = next_fleas_ticks_treatment AT TIME ZONE 'UTC'
            WHERE created_at IS NOT NULL;
        """)
    op.alter_column('pets', 'created_at',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=False,
                    existing_server_default=sa.text("TIMEZONE('utc', now())"))
    op.alter_column('pets', 'updated_at',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=False,
                    existing_server_default=sa.text("TIMEZONE('utc', now())"))
    op.alter_column('pets', 'last_vaccination',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    op.alter_column('pets', 'next_vaccination',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    op.alter_column('pets', 'last_parasite_treatment',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    op.alter_column('pets', 'next_parasite_treatment',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    op.alter_column('pets', 'last_fleas_ticks_treatment',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    op.alter_column('pets', 'next_fleas_ticks_treatment',
                    existing_type=postgresql.TIMESTAMP(),
                    type_=sa.DateTime(timezone=True),
                    existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('pets', 'next_fleas_ticks_treatment',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'last_fleas_ticks_treatment',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'next_parasite_treatment',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'last_parasite_treatment',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'next_vaccination',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'last_vaccination',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=True)
    op.alter_column('pets', 'updated_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=False,
                    existing_server_default=sa.text('now()'))
    op.alter_column('pets', 'created_at',
                    existing_type=sa.DateTime(timezone=True),
                    type_=postgresql.TIMESTAMP(),
                    existing_nullable=False,
                    existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
