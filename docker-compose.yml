services:
#  web:
#    image: fastapi_app
#    container_name: fastapi_app
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8000:80"
#    volumes:
#      - .:/app
#    restart: always
  postgres:
    image: postgis/postgis:latest # postgres + postgis
    container_name: dogalert_postgres
    platform: linux/amd64
#    depends_on:
#      - web
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d dbname" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  rabbitmq:
    image: rabbitmq:4-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  pgdata:
    driver: local
  rabbitmq-data: