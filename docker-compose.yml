services:
  web:
    container_name: fastapi_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/app
    env_file:
      - .env
    restart: unless-stopped
    networks:
      web_postgres_network:

  postgres:
    image: postgis/postgis:latest # postgres + postgis
    container_name: dogalert_postgres
    platform: linux/amd64
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d dbname" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      web_postgres_network:

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    depends_on:
      - postgres
    ports:
      - "8888:80"
    env_file:
      - .env
    volumes:
      - ./pgadmin:/var/lib/pgadmin/data/pgadmindata
    networks:
      web_postgres_network:

  rabbitmq:
    image: rabbitmq:4-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      web_postgres_network:

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      web_postgres_network:


volumes:
  pgdata:
  pgadmin:
  rabbitmq-data:

networks:
  web_postgres_network:
    driver: bridge